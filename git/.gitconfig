[user]
	name = Vaverka
	email = jvaverka@protonmail.com
[core]
	editor=nvim
[alias]
  ; don't use 'a' since I don't have 'peco' installed
	; a = "!git status --short | peco | awk '{print $2}' | xargs git add"
  ;
  ; add conflicted file on merge
  add-unmerged = "!f() { git ls-files --unmerged | cut -f2 | sort -u ; }; git add `f`"
  ba = branch -a
  bm = branch --merged
  bn = branch --no-merged
  br = branch
  ca = commit -a
  ci = commit
  co = checkout
  d = diff
  df = "!git hist | peco | awk '{print $2}' | xargs -I {} git diff {}^ {}"
  dump = cat-file -p
  # edit conflicted file on merge
  edit-unmerged = "!f() { git ls-files --unmerged | cut -f2 | sort -u ; }; vim `f`"
  find = "!f() { git log --pretty=format:\"%h %cd [%cn] %s%d\" --date=relative -S'pretty' -S\"$@\" | peco | awk '{print $1}' | xargs -I {} git diff {}^ {}; }; f"
  hist = log --pretty=format:\"%Cgreen%h %Creset%cd %Cblue[%cn] %Creset%s%C(yellow)%d%C(reset)\" --graph --date=relative --decorate --all
	lg = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
  llog = log --graph --name-status --pretty=format:\"%C(red)%h %C(reset)(%cd) %C(green)%an %Creset%s %C(yellow)%d%Creset\" --date=relative
  open = "!hub browse"
  pl = "!git pull origin $(git rev-parse --abbrev-ref HEAD)"
  ps = "!git push origin $(git rev-parse --abbrev-ref HEAD)"
  st = status
  type = cat-file -t
[merge]
	tool = meld
